{"version":3,"file":"main.js","mappings":"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","sources":["./apps/weather-space/src/app/app.component.ts","./apps/weather-space/src/app/app.component.html","./apps/weather-space/src/app/app.config.ts","./apps/weather-space/src/app/app.routs.ts","./apps/weather-space/src/app/components/layout/layout.component.ts","./apps/weather-space/src/app/components/layout/layout.component.html","./apps/weather-space/src/app/shared/interceptors/error-message.context.ts","./apps/weather-space/src/app/shared/interceptors/error.interceptor.ts","./apps/weather-space/src/app/shared/messaging/dialog.component.ts","./apps/weather-space/src/app/shared/messaging/message.service.ts","./apps/weather-space/src/app/shared/messaging/message.ts","./apps/weather-space/src/app/shared/mock/data.ts","./apps/weather-space/src/app/shared/services/error.service.ts","./apps/weather-space/src/app/shared/services/server.service.ts","./apps/weather-space/src/app/store/store.ts","./apps/weather-space/src/app/store/updaters.ts","./apps/weather-space/src/app/store/with-current.feature.ts","./apps/weather-space/src/app/store/with-favorites.feature.ts","./apps/weather-space/src/app/store/with-future.feature.ts","./apps/weather-space/src/app/store/with-options.feature.ts","./apps/weather-space/src/app/weather/weather-http.service.ts","./apps/weather-space/src/app/weather/weather.service.ts","./apps/weather-space/src/environments/environment.ts","./apps/weather-space/src/main.ts","./libs/src/lib/dom/helpers/entities/logic.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { RouterOutlet } from \"@angular/router\";\nimport { LayoutComponent } from \"./components/layout/layout.component\";\n\n@Component({\n  selector: \"weather-space-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n  standalone: true,\n  imports: [LayoutComponent, RouterOutlet],\n})\nexport class AppComponent {}\n","<weather-space-layout>\n  <router-outlet></router-outlet>\n</weather-space-layout>\n","import {\n  ApplicationConfig,\n  ErrorHandler,\n  importProvidersFrom,\n} from '@angular/core';\n\nimport {\n  provideHttpClient,\n  withFetch,\n  withInterceptors,\n} from '@angular/common/http';\nimport {\n  BrowserModule,\n  provideClientHydration,\n} from '@angular/platform-browser';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { provideRouter } from '@angular/router';\n\nimport { appRoutes } from './app.routs';\nimport { ErrorsService } from './shared/services/error.service';\n\nimport { provideToastr } from 'ngx-toastr';\nimport { errorInterceptor } from './shared/interceptors/error.interceptor';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideClientHydration(),\n    importProvidersFrom(BrowserModule),\n    provideRouter(appRoutes),\n    provideAnimations(),\n    provideAnimationsAsync(),\n    provideHttpClient(withInterceptors([errorInterceptor]), withFetch()),\n    provideToastr(),\n    {\n      provide: ErrorHandler,\n      useClass: ErrorsService,\n    },\n  ],\n};\n","import { Routes } from '@angular/router';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    loadComponent: () =>\n      import('./pages/lobby/lobby.component').then((m) => m.LobbyPageComponent),\n    title: 'Weather Space',\n  },\n  {\n    path: 'favorites',\n    loadComponent: () =>\n      import('./pages/favorites/favorites.component').then(\n        (m) => m.FavoritesPageComponent\n      ),\n  },\n  {\n    path: '**',\n    loadComponent: () =>\n      import('./pages/page-not-found/page-not-found.component').then(\n        (m) => m.PageNotFoundComponent\n      ),\n  },\n  {\n    path: '',\n    redirectTo: '/',\n    pathMatch: 'full',\n  },\n];\n","import { TitleCasePipe } from '@angular/common';\nimport { Component, Signal, WritableSignal, computed, inject } from '@angular/core';\nimport { MatBadge } from '@angular/material/badge';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MatSidenavContainer,\n  MatSidenavContent,\n} from '@angular/material/sidenav';\nimport {\n  MatSlideToggle,\n  MatSlideToggleChange,\n} from '@angular/material/slide-toggle';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport { RouterLink } from '@angular/router';\nimport { ServerService } from '../../shared/services/server.service';\nimport { Store } from '../../store/store';\n\n@Component({\n  selector: 'weather-space-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  standalone: true,\n  imports: [\n    RouterLink,\n    TitleCasePipe,\n    MatSidenavContainer,\n    MatSidenavContent,\n    MatToolbar,\n    MatButton,\n    MatSlideToggle,\n    MatBadge,\n  ],\n})\nexport class LayoutComponent {\n  #serverService = inject(ServerService);\n\n  #store = inject(Store);\n\n  isServer: WritableSignal<boolean> = this.#serverService.getServer();\n\n  toggleLabel = computed(() => 'server ' + (this.isServer() ? 'on' : 'off'));\n\n  favoriteCount: Signal<string> = this.#store.favoritesCount;\n\n  onValueChanged(event: MatSlideToggleChange) {\n    this.#serverService.setServer(event.checked);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav-content>\n    <mat-toolbar class=\"mat-elevation-z3\">\n      <div class=\"toolbar-container\">\n        <section class=\"logo\">\n          <h1>Weather Space</h1>\n          <mat-slide-toggle\n            [checked]=\"isServer()\"\n            (change)=\"onValueChanged($event)\"\n            >{{ toggleLabel() | titlecase }}</mat-slide-toggle\n          >\n        </section>\n        <section class=\"navigation\">\n          <button mat-button [routerLink]=\"'/'\">Home</button>\n          <button mat-button [routerLink]=\"'/favorites'\">\n            <span matBadgeOverlap=\"false\" [matBadge]=\"favoriteCount()\">\n              Favorites\n            </span>\n          </button>\n        </section>\n      </div>\n    </mat-toolbar>\n\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { HttpContextToken } from '@angular/common/http';\n\nexport const ERROR_MESSAGE_CONTEXT = new HttpContextToken(\n  () =>\n    'Apologies, an unexpected issue has occurred on our end. Please disable server mode'\n);\n","import { HttpErrorResponse, HttpInterceptorFn } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport { ERROR_MESSAGE_CONTEXT } from './error-message.context';\nimport { inject } from '@angular/core';\nimport { MessageService } from '../messaging/message.service';\n\nexport const errorInterceptor: HttpInterceptorFn = (req, handle) => {\n  const msgSErvice = inject(MessageService);\n  return handle(req).pipe(\n    catchError((err: HttpErrorResponse) => {\n      const message = req.context.get(ERROR_MESSAGE_CONTEXT);\n\n      msgSErvice.error(message);\n      return throwError(() => err);\n    })\n  );\n};\n","import { TitleCasePipe } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogActions,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\nimport { MatIcon } from '@angular/material/icon';\nimport { DialogData, DialogType } from './message';\n\n@Component({\n  template: `\n    <header>\n      <mat-icon color=\"primary\" [fontIcon]=\"icons[data.type]\"></mat-icon>\n      <span>\n        {{ data.type | titlecase }}\n      </span>\n    </header>\n    <mat-dialog-content>{{ data.message }}</mat-dialog-content>\n    <mat-dialog-actions>\n      <button mat-button>OK</button>\n    </mat-dialog-actions>\n  `,\n  styles: `\n\n  header {\n  display: flex;\n  flex-direction : column;\n  align-items : center;\n  padding-top :16px;\n  gap: 16px;\n}\n\n`,\n  standalone: true,\n  imports: [\n    TitleCasePipe,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatButtonModule,\n    MatIcon,\n  ],\n})\nexport class DialogComponent {\n  data: DialogData = inject(MAT_DIALOG_DATA);\n\n  icons: Record<DialogType, string> = {\n    [DialogType.CONFIRM]: 'task-info',\n    [DialogType.ERROR]: 'task_alt',\n    [DialogType.INFO]: 'info',\n  };\n}\n","import { inject, Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { DialogComponent } from './dialog.component';\nimport { DialogType } from './message';\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  #dialog = inject(MatDialog);\n\n  info(message: string) {\n    return this.openDialog(message, DialogType.INFO);\n  }\n\n  error(message: string) {\n    return this.openDialog(message, DialogType.ERROR);\n  }\n\n  confirm(message: string): Observable<boolean> {\n    return this.openDialog(message, DialogType.CONFIRM);\n  }\n\n  private openDialog(message: string, type: string, deniable = false) {\n    return this.#dialog\n      .open(DialogComponent, {\n        disableClose: true,\n        hasBackdrop: true,\n        panelClass: type,\n        data: {\n          type,\n          message,\n          deniable,\n        },\n      })\n      .afterClosed();\n  }\n}\n","export enum DialogType {\n  ERROR = 'error',\n  INFO = 'info',\n  CONFIRM = 'confirm',\n}\n\n\nexport interface DialogData {\n  type: DialogType;\n  message: string;\n  deniable: boolean;\n}\n\n","import { EntityMap } from '@ngrx/signals/entities';\nimport { FavoriteEntity } from '../../weather/weather-favorite-card/favorite-card.component';\nimport { AutocompleteMediaResult } from '../../weather/models/autocomplete-result';\nimport { CurrentWeatherMediaResult } from '../../weather/models/current-weather-result';\nimport { FutureWeatherMediaResult } from '../../weather/models/future-weather-result';\nimport { GeolocationWeatherMediaResult } from '../../weather/models/geolocation-weather-result';\n\nexport const LOCATIONS_AUTOCOMPLETE_MediaResult: AutocompleteMediaResult[] = [\n  {\n    Version: 1,\n    Key: '226396',\n    Type: 'City',\n    Rank: 10,\n    LocalizedName: 'Tokyo',\n    Country: {\n      ID: 'JP',\n      LocalizedName: 'Japan',\n    },\n    AdministrativeArea: {\n      ID: '13',\n      LocalizedName: 'Tokyo',\n    },\n  },\n  {\n    Version: 1,\n    Key: '212575',\n    Type: 'City',\n    Rank: 10,\n    LocalizedName: 'Rosh HaAyin',\n    Country: {\n      ID: 'JP',\n      LocalizedName: 'Isreal',\n    },\n    AdministrativeArea: {\n      ID: '13',\n      LocalizedName: 'Rosh HaAyin',\n    },\n  },\n  {\n    Version: 1,\n    Key: '106770',\n    Type: 'City',\n    Rank: 11,\n    LocalizedName: 'Taiyuan',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'SX',\n      LocalizedName: 'Shanxi',\n    },\n  },\n  {\n    Version: 1,\n    Key: '106780',\n    Type: 'City',\n    Rank: 11,\n    LocalizedName: 'Tianjin',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'TJ',\n      LocalizedName: 'Tianjin',\n    },\n  },\n  {\n    Version: 1,\n    Key: '58491',\n    Type: 'City',\n    Rank: 13,\n    LocalizedName: 'Tongren',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'GZ',\n      LocalizedName: 'Guizhou',\n    },\n  },\n  {\n    Version: 1,\n    Key: '102324',\n    Type: 'City',\n    Rank: 13,\n    LocalizedName: 'Tangshan',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'HE',\n      LocalizedName: 'Hebei',\n    },\n  },\n  {\n    Version: 1,\n    Key: '59573',\n    Type: 'City',\n    Rank: 13,\n    LocalizedName: 'Taizhou',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'JS',\n      LocalizedName: 'Jiangsu',\n    },\n  },\n  {\n    Version: 1,\n    Key: '60198',\n    Type: 'City',\n    Rank: 13,\n    LocalizedName: 'Tongliao',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'NM',\n      LocalizedName: 'Inner Mongolia',\n    },\n  },\n  {\n    Version: 1,\n    Key: '106571',\n    Type: 'City',\n    Rank: 13,\n    LocalizedName: \"Tai'an\",\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'SD',\n      LocalizedName: 'Shandong',\n    },\n  },\n  {\n    Version: 1,\n    Key: '58055',\n    Type: 'City',\n    Rank: 15,\n    LocalizedName: 'Tianshui',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'GS',\n      LocalizedName: 'Gansu',\n    },\n  },\n  {\n    Version: 1,\n    Key: '2333653',\n    Type: 'City',\n    Rank: 15,\n    LocalizedName: 'Taizhou',\n    Country: {\n      ID: 'CN',\n      LocalizedName: 'China',\n    },\n    AdministrativeArea: {\n      ID: 'ZJ',\n      LocalizedName: 'Zhejiang',\n    },\n  },\n  {\n    Version: 1,\n    Key: '215854',\n    Type: 'City',\n    Rank: 31,\n    LocalizedName: 'Tel Aviv',\n    Country: {\n      ID: 'IL',\n      LocalizedName: 'Israel',\n    },\n    AdministrativeArea: {\n      ID: 'TA',\n      LocalizedName: 'Tel Aviv',\n    },\n  },\n];\n\nexport const CURRENT_WEATHER_MediaResult: CurrentWeatherMediaResult[] = [\n  {\n    LocalObservationDateTime: new Date('2022-07-28T15:28:00+03:00'),\n    EpochTime: 1659011280,\n    WeatherText: 'Sunny',\n    WeatherIcon: 1,\n    HasPrecipitation: false,\n    PrecipitationType: null,\n    IsDayTime: true,\n    Temperature: {\n      Metric: {\n        Value: 34.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 94.0,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n    MobileLink:\n      'http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us',\n    Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us',\n  },\n];\n\nexport const FUTURE_WEATHER_MediaResult: FutureWeatherMediaResult = {\n  Headline: {\n    EffectiveDate: new Date('2022-07-28T14:00:00+03:00'),\n    EffectiveEpochDate: 1659006000,\n    Severity: 4,\n    Text: 'Danger of dehydration and heat stroke if outside for extended periods of time Thursday afternoon',\n    Category: 'heat',\n    EndDate: new Date('2022-07-28T20:00:00+03:00'),\n    EndEpochDate: 1659027600,\n    MobileLink:\n      'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?lang=en-us',\n    Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?lang=en-us',\n  },\n  DailyForecasts: [\n    {\n      Date: new Date('2022-07-28T07:00:00+03:00'),\n      EpochDate: 1658980800,\n      Temperature: {\n        Minimum: {\n          Value: 24.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 94.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false,\n      },\n      Sources: ['AccuWeather'],\n      MobileLink:\n        'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=1&lang=en-us',\n    },\n    {\n      Date: new Date('2022-07-29T07:00:00+03:00'),\n      EpochDate: 1659067200,\n      Temperature: {\n        Minimum: {\n          Value: 76.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 92.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 35,\n        IconPhrase: 'Partly cloudy',\n        HasPrecipitation: false,\n      },\n      Sources: ['AccuWeather'],\n      MobileLink:\n        'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=2&lang=en-us',\n    },\n    {\n      Date: new Date('2022-07-30T07:00:00+03:00'),\n      EpochDate: 1659153600,\n      Temperature: {\n        Minimum: {\n          Value: 74.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 90.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false,\n      },\n      Sources: ['AccuWeather'],\n      MobileLink:\n        'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=3&lang=en-us',\n    },\n    {\n      Date: new Date('2022-07-31T07:00:00+03:00'),\n      EpochDate: 1659240000,\n      Temperature: {\n        Minimum: {\n          Value: 74.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 88.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 1,\n        IconPhrase: 'Sunny',\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false,\n      },\n      Sources: ['AccuWeather'],\n      MobileLink:\n        'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=4&lang=en-us',\n    },\n    {\n      Date: new Date('2022-08-01T07:00:00+03:00'),\n      EpochDate: 1659326400,\n      Temperature: {\n        Minimum: {\n          Value: 74.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n        Maximum: {\n          Value: 89.0,\n          Unit: 'C',\n          UnitType: 18,\n        },\n      },\n      Day: {\n        Icon: 2,\n        IconPhrase: 'Mostly sunny',\n        HasPrecipitation: false,\n      },\n      Night: {\n        Icon: 34,\n        IconPhrase: 'Mostly clear',\n        HasPrecipitation: false,\n      },\n      Sources: ['AccuWeather'],\n      MobileLink:\n        'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us',\n      Link: 'http://www.accuweather.com/en/il/tel-aviv/215854/daily-weather-forecast/215854?day=5&lang=en-us',\n    },\n  ],\n};\n\nexport const GEOLOCATION_DATA: GeolocationWeatherMediaResult = {\n  Version: 1,\n  Key: '212575',\n  Type: 'City',\n  Rank: 55,\n  LocalizedName: 'Rosh HaAyin',\n  EnglishName: 'Rosh HaAyin',\n  Country: {\n    ID: 'IL',\n    LocalizedName: 'Israel',\n    EnglishName: 'Israel',\n  },\n  GeoPosition: {\n    Latitude: 32.094,\n    Longitude: 34.946,\n    Elevation: {\n      Metric: {\n        Value: 29.0,\n        Unit: 'm',\n        UnitType: 5,\n      },\n      Imperial: {\n        Value: 95.0,\n        Unit: 'ft',\n        UnitType: 0,\n      },\n    },\n  },\n};\n\nexport const FAVORITES: EntityMap<FavoriteEntity> = {\n  212575: {\n    id: 212575,\n    WeatherText: 'Partly cloudy',\n    LocalizedName: 'San Francisco',\n    Temperature: {\n      Metric: {\n        Value: 15.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 60.1,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n  },\n  226396: {\n    id: 226396,\n    WeatherText: 'Partly cloudy',\n    LocalizedName: 'San Francisco',\n    Temperature: {\n      Metric: {\n        Value: 15.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 60.1,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n  },\n  106770: {\n    id: 106770,\n    WeatherText: 'Partly cloudy',\n    LocalizedName: 'San Francisco',\n    Temperature: {\n      Metric: {\n        Value: 15.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 60.1,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n  },\n  106775: {\n    id: 106775,\n    WeatherText: 'Partly cloudy',\n    LocalizedName: 'San Francisco',\n    Temperature: {\n      Metric: {\n        Value: 15.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 60.1,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n  },\n  213575: {\n    id: 232575,\n    WeatherText: 'Partly cloudy',\n    LocalizedName: 'San Francisco',\n    Temperature: {\n      Metric: {\n        Value: 15.6,\n        Unit: 'C',\n        UnitType: 17,\n      },\n      Imperial: {\n        Value: 60.1,\n        Unit: 'F',\n        UnitType: 18,\n      },\n    },\n  },\n};\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Inject, Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorsService implements ErrorHandler {\n  constructor(\n    private router: Router,\n    @Inject(Injector) private injector: Injector\n  ) {}\n\n  private get toastrService(): ToastrService {\n    return this.injector.get(ToastrService);\n  }\n\n  handleError(error: ErrorEvent | HttpErrorResponse) {\n    if (error instanceof ErrorEvent) {\n      this.handleClientError(error);\n    }\n  }\n\n  private handleClientError(error: ErrorEvent): void {\n    console.error(\n      'Custom Error Handler:',\n      error.message || 'An unexpected error occurred'\n    );\n  }\n\n}\n","import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServerService {\n\n  private readonly server = signal(false);\n\n  public getServer() {\n    return this.server;\n  }\n\n  public setServer(value: boolean) {\n    this.server.set(value);\n  }\n\n  public toggleServer() {\n    this.server.update((value) => !value);\n  }\n\n  public onServer() {\n    this.server.set(true);\n  }\n\n  public offServer() {\n    this.server.set(false);\n  }\n}\n","import { withDevtools } from '@angular-architects/ngrx-toolkit';\nimport { computed } from '@angular/core';\nimport {\n  patchState,\n  signalStore,\n  withComputed,\n  withMethods,\n  withState,\n} from '@ngrx/signals';\nimport { addEntity, removeEntity } from '@ngrx/signals/entities';\nimport { FavoriteEntity } from '../weather/weather-favorite-card/favorite-card.component';\nimport { WeatherService } from '../weather/weather.service';\nimport { updateIsMetric } from './updaters';\nimport { withCurrentWeather } from './with-current.feature';\nimport { withFavorites } from './with-favorites.feature';\nimport { withFutureWeather } from './with-future.feature';\nimport { withOptions } from './with-options.feature';\nimport { AutocompleteOption } from '../weather/models/autocomplete-result';\n\nexport interface State {\n  isMetric: boolean;\n  isGeolocation: boolean;\n  selectedId: number;\n}\n\nconst initialState: State = {\n  isMetric: true,\n  isGeolocation: true,\n  selectedId: -1,\n};\n\nexport const Store = signalStore(\n  { providedIn: 'root' },\n  withDevtools('store'),\n  withState(initialState),\n  withOptions(WeatherService),\n  withCurrentWeather(WeatherService),\n  withFutureWeather(WeatherService),\n  withFavorites(),\n  withComputed((store) => ({\n    optionSelected: computed(\n      () => store.optionsEntityMap()[store.selectedId()]\n    ),\n    hasFavorites: computed(() => store.favoritesEntities().length !== 0),\n    favoritesCount: computed(() =>\n      store.favoritesEntities().length > 0\n        ? String(store.favoritesEntities().length)\n        : ''\n    ),\n  })),\n  withMethods((state) => ({\n    setCurrentId(value: string) {\n      const option = state\n        .optionsEntities()\n        .find((option) => optionCompareTo(option, value));\n      patchState(state, { selectedId: option?.id });\n    },\n\n    updateCurrentId(id: number) {\n      patchState(state, { selectedId: id });\n    },\n\n    updateIsMetric(isMetric: boolean) {\n      patchState(state, updateIsMetric(isMetric));\n    },\n\n    addFavorite(item: FavoriteEntity) {\n      patchState(state, addEntity(item, { collection: 'favorites' }));\n    },\n    removeFavorite(item: FavoriteEntity) {\n      patchState(state, removeEntity(item.id, { collection: 'favorites' }));\n    },\n  }))\n);\n\nfunction optionCompareTo(option: AutocompleteOption, value: string): boolean {\n  return option ? option.LocalizedName.toLowerCase() === value : false;\n}\n","import { State } from './store';\n\nexport function updateSelectedId(id: number): Partial<State> {\n  return { selectedId: id };\n}\n\nexport function updateIsMetric(isMetric: boolean): Partial<State> {\n  return { isMetric };\n}\n","import { signalStoreFeature, type, withMethods } from '@ngrx/signals';\nimport {\n  Entity,\n  EntityLoader,\n  LoaderService,\n  createLoader,\n  loadEntities,\n  onLoadCollection,\n} from '@dom';\nimport { withEntities } from '@ngrx/signals/entities';\nimport { CurrentWeather } from '../weather/models/current-weather-result';\n\ntype WeatherLoader = EntityLoader<number, Entity, 'loadCurrentWeather'>;\n\nconst COLLECTION = 'current';\n\nexport function withCurrentWeather(Loader: LoaderService<WeatherLoader>) {\n  return signalStoreFeature(\n    withEntities({ entity: type<CurrentWeather>(), collection: COLLECTION }),\n    withMethods((store) => {\n      const loader = createLoader(Loader, 'loadCurrentWeather');\n      return {\n        loadCurrentWeather: loadEntities(\n          loader,\n          onLoadCollection(store, COLLECTION)\n        ),\n      };\n    })\n  );\n}\n","import { signalStoreFeature, type } from '@ngrx/signals';\nimport { withEntities } from '@ngrx/signals/entities';\nimport { FavoriteEntity } from '../weather/weather-favorite-card/favorite-card.component';\n\nconst COLLECTION = 'favorites';\n\nexport function withFavorites() {\n  return signalStoreFeature(\n    withEntities({\n      entity: type<FavoriteEntity>(),\n      collection: COLLECTION,\n    })\n  );\n}\n","import { signalStoreFeature, type, withMethods } from '@ngrx/signals';\nimport { withEntities } from '@ngrx/signals/entities';\n\nimport {\n  Entity,\n  EntityLoader,\n  LoaderService,\n  createLoader,\n  loadEntities,\n  onLoadCollection,\n} from '@dom';\nimport {\n  FutureWeather,\n  FutureWeatherArgs,\n} from '../weather/models/future-weather-result';\n\ntype FutureWeatherLoader = EntityLoader<\n  FutureWeatherArgs,\n  Entity,\n  'loadFutureWeather'\n>;\n\nconst COLLECTION = 'future';\n\nexport function withFutureWeather(Loader: LoaderService<FutureWeatherLoader>) {\n  return signalStoreFeature(\n    withEntities({ entity: type<FutureWeather>(), collection: COLLECTION }),\n    withMethods((store) => {\n      const loader = createLoader(Loader, 'loadFutureWeather');\n      return {\n        loadFutureWeather: loadEntities(\n          loader,\n          onLoadCollection(store, COLLECTION)\n        ),\n      };\n    })\n  );\n}\n","import {\n  Entity,\n  EntityLoader,\n  LoaderService,\n  createLoader,\n  loadEntities,\n  onLoadCollection,\n} from '@dom';\nimport {\n  patchState,\n  signalStoreFeature,\n  type,\n  withMethods,\n} from '@ngrx/signals';\nimport { addEntities, withEntities } from '@ngrx/signals/entities';\nimport { lastValueFrom } from 'rxjs';\nimport { AutocompleteOption } from '../weather/models/autocomplete-result';\n\ntype OptionLoader = EntityLoader<string, Entity, 'loadOptions'>;\n\nconst COLLECTION = 'options';\n\nexport function withOptions(Loader: LoaderService<OptionLoader>) {\n  return signalStoreFeature(\n    withEntities({\n      entity: type<AutocompleteOption>(),\n      collection: COLLECTION,\n    }),\n    withMethods((store) => {\n      const loader = createLoader(Loader, 'loadOptions');\n      return {\n        loadOptions: loadEntities(loader, onLoadCollection(store, COLLECTION)),\n\n        async loadOptionAsync(query: string) {\n          const res = await lastValueFrom(loader(query));\n          const options = res as AutocompleteOption[];\n          patchState(store, addEntities(options, { collection: COLLECTION }));\n        },\n      };\n    })\n  );\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n\nimport { EntityId } from '@ngrx/signals/entities';\nimport { distinctUntilChanged, map, Observable, of, switchMap } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nimport { ServerService } from '../shared/services/server.service';\nimport {\n  CURRENT_WEATHER_MediaResult,\n  FUTURE_WEATHER_MediaResult,\n  LOCATIONS_AUTOCOMPLETE_MediaResult,\n} from '../shared/mock/data';\nimport { CurrentWeatherMediaResult } from './models/current-weather-result';\nimport { FutureWeatherMediaResult } from './models/future-weather-result';\nimport { GeolocationWeatherMediaResult } from './models/geolocation-weather-result';\nimport { AutocompleteMediaResult } from './models/autocomplete-result';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherHttpService {\n  private readonly _baseUrl: string = environment.weatherEndpoint;\n\n  constructor(private serverService: ServerService, private http: HttpClient) {}\n\n  public getOptions(query: string): Observable<AutocompleteMediaResult[]> {\n    const params = new HttpParams()\n      .set('apikey', environment.accuWeatherAPIKey)\n      .set('q', query);\n    return this.http.get<AutocompleteMediaResult[]>(\n      this._baseUrl + 'locations/v1/cities/autocomplete',\n      { params }\n    );\n  }\n\n  public loadOptions(query: string): Observable<AutocompleteMediaResult[]> {\n    const isServer = this.serverService.getServer();\n\n    return isServer()\n      ? this.getOptions(query)\n      : of(LOCATIONS_AUTOCOMPLETE_MediaResult);\n  }\n\n  public getCurrentWeather(\n    locationKey: EntityId\n  ): Observable<CurrentWeatherMediaResult[]> {\n    const params = new HttpParams().set(\n      'apikey',\n      environment.accuWeatherAPIKey\n    );\n    return this.http.get<CurrentWeatherMediaResult[]>(\n      this._baseUrl + 'currentconditions/v1/' + locationKey,\n      { params }\n    );\n  }\n\n  public loadCurrentWeather(\n    locationKey: number\n  ): Observable<CurrentWeatherMediaResult[]> {\n    const isServer = this.serverService.getServer();\n\n    return isServer()\n      ? this.getCurrentWeather(locationKey)\n      : of(CURRENT_WEATHER_MediaResult);\n  }\n\n  public getFutureWeather(\n    locationKey: EntityId,\n    metric: boolean\n  ): Observable<FutureWeatherMediaResult> {\n    const params = new HttpParams()\n      .set('apikey', environment.accuWeatherAPIKey)\n      .append('metric', metric);\n    return this.http.get<FutureWeatherMediaResult>(\n      this._baseUrl + 'forecasts/v1/daily/5day/' + locationKey,\n      { params }\n    );\n  }\n\n  public loadFutureWeather(\n    locationKey: EntityId,\n    metric: boolean\n  ): Observable<FutureWeatherMediaResult> {\n    const isServer = this.serverService.getServer();\n\n    return isServer()\n      ? this.getFutureWeather(locationKey, metric)\n      : of(FUTURE_WEATHER_MediaResult);\n  }\n\n  private _getGeolocation(): Observable<GeolocationPosition> {\n    return new Observable((obs) => {\n      navigator.geolocation.getCurrentPosition(\n        (success) => {\n          obs.next(success);\n          obs.complete();\n        },\n        (error) => {\n          obs.error(error);\n        }\n      );\n    });\n  }\n\n  public getGeolocationWeather(): Observable<string> {\n    const url: string =\n      this._baseUrl + 'locations/v1/cities/geoposition/search';\n\n    return this._getGeolocation().pipe(\n      map((position: GeolocationPosition) => {\n        const lat = position.coords.latitude;\n        const lot = position.coords.longitude;\n        return `${lat},${lot}`;\n      }),\n      distinctUntilChanged(),\n      switchMap((query: string) => {\n        const params = new HttpParams()\n          .set('apikey', environment.accuWeatherAPIKey)\n          .append('q', query);\n        return this.http\n          .get<GeolocationWeatherMediaResult>(url, { params })\n          .pipe(map((res: GeolocationWeatherMediaResult) => res.LocalizedName));\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport {\n  AutocompleteMediaResult,\n  AutocompleteOption,\n} from './models/autocomplete-result';\nimport {\n  CurrentWeather,\n  CurrentWeatherMediaResult,\n} from './models/current-weather-result';\nimport {\n  FutureWeather,\n  FutureWeatherArgs,\n  FutureWeatherMediaResult,\n} from './models/future-weather-result';\nimport { WeatherHttpService } from './weather-http.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(private weatherHttp: WeatherHttpService) {}\n\n  public loadOptions(query: string): Observable<AutocompleteOption[]> {\n    return this.weatherHttp\n      .loadOptions(query)\n      .pipe(\n        map((MediaResults) => this._mapToAutocompleteMediaResults(MediaResults))\n      );\n  }\n\n  private _mapToAutocompleteMediaResults(\n    input: AutocompleteMediaResult[]\n  ): AutocompleteOption[] {\n    return input.map((item) => ({\n      id: Number(item.Key),\n      Version: item.Version,\n      Type: item.Type,\n      Rank: item.Rank,\n      LocalizedName: item.LocalizedName,\n      Country: item.Country,\n      AdministrativeArea: item.AdministrativeArea,\n    }));\n  }\n\n  public loadCurrentWeather(locationKey: number): Observable<CurrentWeather[]> {\n    return this.weatherHttp.loadCurrentWeather(locationKey).pipe(\n      map((data: CurrentWeatherMediaResult[]) => {\n        return { id: locationKey, ...data[0] } as CurrentWeather;\n      }),\n      map((res) => [res])\n    );\n  }\n\n  public loadFutureWeather(\n    args: FutureWeatherArgs\n  ): Observable<FutureWeather[]> {\n    const { id, metric } = args;\n    return this.weatherHttp.loadFutureWeather(id, metric).pipe(\n      map((data: FutureWeatherMediaResult) => {\n        return { id, ...data } as FutureWeather;\n      }),\n      map((res) => [res])\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  accuWeatherAPIKey : 'suYaPffekm9dzvAivsynQoUXBpRKrmcd',\n  weatherEndpoint : 'https://dataservice.accuweather.com/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) =>\n  console.error(err)\n);\n","import { Injector, inject, runInInjectionContext } from '@angular/core';\nimport { tapResponse } from '@ngrx/operators';\nimport { StateSignal, patchState } from '@ngrx/signals';\nimport { EntityId, addEntities, setAllEntities } from '@ngrx/signals/entities';\nimport { rxMethod } from '@ngrx/signals/rxjs-interop';\nimport { EMPTY, Observable, pipe, switchMap } from 'rxjs';\nimport { Entity, EntityLoader, LoaderService } from './types';\n\nexport function onLoadSlice<Entity extends { id: EntityId }>(\n  state: StateSignal<object>,\n  slice: keyof StateSignal<object>\n) {\n  return (res: Entity[] | Entity) => patchState(state, { [slice]: res });\n}\n\nexport function onLoadEntities<Entity extends { id: EntityId }>(\n  state: StateSignal<object>\n) {\n  return (res: Entity[]) => patchState(state, addEntities(res));\n}\n\n// Function to handle the success response of loading entities\nexport function onLoadCollection<Entity extends { id: EntityId }>(\n  state: StateSignal<object>,\n  collection: string\n) {\n  return (res: Entity[] | Entity) =>\n    patchState(state, addEntities(res as Entity[], { collection }));\n}\n\n// Function to handle the success response of loading entities\nexport function onUpdateCollection<Entity extends { id: EntityId }>(\n  state: StateSignal<object>,\n  collection: string\n) {\n  return (res: Entity[] | Entity) => {\n    patchState(\n      state as StateSignal<object>,\n      setAllEntities(res as Entity[], { collection })\n    );\n  };\n}\n\n/**\n * Creates a function that invokes a specified method on a LoaderService instance.\n * @param Loader The LoaderService instance.\n * @param methodName The name of the method to invoke on the LoaderService instance.\n * @returns A function that accepts parameters for the specified method and returns an Observable of the result.\n * @template T The type of parameters accepted by the method.\n */\n\nexport function createLoader<T>(\n  Loader: LoaderService<EntityLoader<T, Entity, string>>,\n  methodName: string\n): (...args: T[]) => Observable<Entity[] | Entity> {\n  return runInInjectionContext(inject(Injector), () => {\n    const loader = inject(Loader);\n    return (query: T) => loader[methodName](query);\n  });\n}\n\nexport function loadCollection<T>(\n  loader: (query: T) => Observable<Entity[]>,\n  next: (value: Entity[]) => void\n) {\n  return rxMethod<T>(\n    pipe(\n      switchMap((query) =>\n        loader(query).pipe(\n          tapResponse({\n            next: next,\n            error: () => EMPTY,\n          })\n        )\n      )\n    )\n  );\n}\n\n/**\n * Loads entities using the provided loader function and invokes the specified \n * callback with the result.\n * @param loader A function that accepts a query parameter of type T and returns\n *               an Observable of Entity or Entity[].\n * @param next A callback function to handle the result of the loading operation.\n * @template T The type of the query parameter.\n */\n\nexport function loadEntities<T>(\n  loader: (query: T) => Observable<Entity[] | Entity>,\n  next: (value: Entity[] | Entity) => void\n) {\n  return rxMethod<T>(\n    pipe(\n      switchMap((query) =>\n        loader(query).pipe(\n          tapResponse({\n            next: next,\n            error: () => EMPTY,\n          })\n        )\n      )\n    )\n  );\n}\n\nexport function loadSlice<T>(\n  loader: (query: T) => Observable<Entity[] | Entity>,\n  state: StateSignal<object>,\n  slice: string\n) {\n  return rxMethod<T>(\n    pipe(\n      switchMap((query: T) =>\n        loader(query).pipe(\n          tapResponse({\n            next: (res: Entity[] | Entity) =>\n              patchState(state, { [slice]: res }),\n            error: () => EMPTY,\n          })\n        )\n      )\n    )\n  );\n}\n"],"names":["RouterOutlet","LayoutComponent","AppComponent","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","styles","ErrorHandler","importProvidersFrom","provideHttpClient","withFetch","withInterceptors","BrowserModule","provideClientHydration","provideAnimations","provideAnimationsAsync","provideRouter","appRoutes","ErrorsService","provideToastr","errorInterceptor","appConfig","providers","provide","useClass","path","loadComponent","then","m","LobbyPageComponent","title","FavoritesPageComponent","PageNotFoundComponent","redirectTo","pathMatch","TitleCasePipe","Signal","WritableSignal","computed","inject","MatBadge","MatButton","MatSidenavContainer","MatSidenavContent","MatSlideToggle","MatToolbar","RouterLink","ServerService","Store","constructor","serverService","store","isServer","getServer","toggleLabel","favoriteCount","favoritesCount","onValueChanged","event","setServer","checked","ngContentSelectors","_c0","consts","LayoutComponent_Template","ɵɵlistener","LayoutComponent_Template_mat_slide_toggle_change_13_listener","$event","ɵɵprojection","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵpipeBind1","HttpContextToken","ERROR_MESSAGE_CONTEXT","catchError","throwError","MessageService","req","handle","msgSErvice","pipe","err","message","context","get","error","MatButtonModule","MAT_DIALOG_DATA","MatDialogActions","MatDialogContent","MatIcon","DialogType","DialogComponent","data","icons","CONFIRM","ERROR","INFO","DialogComponent_Template","type","ɵɵtextInterpolate1","i1","MatDialog","dialog","info","openDialog","confirm","deniable","open","disableClose","hasBackdrop","panelClass","afterClosed","factory","ɵfac","providedIn","LOCATIONS_AUTOCOMPLETE_MediaResult","Version","Key","Type","Rank","LocalizedName","Country","ID","AdministrativeArea","CURRENT_WEATHER_MediaResult","LocalObservationDateTime","Date","EpochTime","WeatherText","WeatherIcon","HasPrecipitation","PrecipitationType","IsDayTime","Temperature","Metric","Value","Unit","UnitType","Imperial","MobileLink","Link","FUTURE_WEATHER_MediaResult","Headline","EffectiveDate","EffectiveEpochDate","Severity","Text","Category","EndDate","EndEpochDate","DailyForecasts","EpochDate","Minimum","Maximum","Day","Icon","IconPhrase","Night","Sources","GEOLOCATION_DATA","EnglishName","GeoPosition","Latitude","Longitude","Elevation","FAVORITES","id","Injector","Router","ToastrService","router","injector","toastrService","handleError","ErrorEvent","handleClientError","console","ɵɵinject","signal","server","value","set","toggleServer","update","onServer","offServer","withDevtools","patchState","signalStore","withComputed","withMethods","withState","addEntity","removeEntity","WeatherService","updateIsMetric","withCurrentWeather","withFavorites","withFutureWeather","withOptions","initialState","isMetric","isGeolocation","selectedId","optionSelected","optionsEntityMap","hasFavorites","favoritesEntities","length","String","state","setCurrentId","option","optionsEntities","find","optionCompareTo","updateCurrentId","addFavorite","item","collection","removeFavorite","toLowerCase","updateSelectedId","signalStoreFeature","createLoader","loadEntities","onLoadCollection","withEntities","COLLECTION","Loader","entity","loader","loadCurrentWeather","loadFutureWeather","addEntities","lastValueFrom","loadOptions","loadOptionAsync","query","_asyncToGenerator","res","options","HttpClient","HttpParams","distinctUntilChanged","map","Observable","of","switchMap","environment","WeatherHttpService","http","_baseUrl","weatherEndpoint","getOptions","params","accuWeatherAPIKey","getCurrentWeather","locationKey","getFutureWeather","metric","append","_getGeolocation","obs","navigator","geolocation","getCurrentPosition","success","next","complete","getGeolocationWeather","url","position","lat","coords","latitude","lot","longitude","i2","weatherHttp","MediaResults","_mapToAutocompleteMediaResults","input","Number","args","production","bootstrapApplication","catch","runInInjectionContext","tapResponse","setAllEntities","rxMethod","EMPTY","onLoadSlice","slice","onLoadEntities","onUpdateCollection","methodName","loadCollection","loadSlice"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}