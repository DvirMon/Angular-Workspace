{"version":3,"file":"apps_weather-space_src_app_pages_favorites_favorites_component_ts.js","mappings":"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","sources":["./apps/weather-space/src/app/pages/favorites/favorites.component.ts","./apps/weather-space/src/app/pages/favorites/favorites.component.html","./apps/weather-space/src/app/weather/weather-favorite-card/favorite-card.component.ts","./apps/weather-space/src/app/weather/weather-favorite-card/favorite-card.component.html"],"sourcesContent":["import { Component, Signal, inject } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { KeyValuePipe, NgFor } from '@angular/common';\nimport { MatButton } from '@angular/material/button';\nimport { EntityMap } from '@ngrx/signals/entities';\nimport { Store } from '../../store/store';\nimport {\n  FavoriteEntity,\n  FavoriteEntityComponent,\n} from '../../weather/weather-favorite-card/favorite-card.component';\n\n@Component({\n  selector: 'weather-space-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n  standalone: true,\n  imports: [NgFor, FavoriteEntityComponent, KeyValuePipe, MatButton],\n})\nexport class FavoritesPageComponent {\n  #store = inject(Store);\n\n  items: Signal<EntityMap<FavoriteEntity>>;\n  isMetric: Signal<boolean>;\n  hasFavorites: Signal<boolean>;\n\n  constructor(private router: Router) {\n    this.items = this.#store.favoritesEntityMap;\n    this.isMetric = this.#store.isMetric;\n    this.hasFavorites = this.#store.hasFavorites\n  }\n\n  public onSelectionChanged({ id }: FavoriteEntity): void {\n    this.#store.updateCurrentId(id);\n    this.router.navigateByUrl('/');\n  }\n}\n","<main>\n  @if (hasFavorites()){\n\n  <ng-container *ngFor=\"let item of items() | keyvalue\">\n    <div class=\"favorite-card-wrapper\">\n      <weather-space-favorite-card\n        [item]=\"item.value\"\n        [metric]=\"isMetric()\"\n        (selectionChanged)=\"onSelectionChanged($event)\"\n      ></weather-space-favorite-card>\n    </div>\n  </ng-container>\n  } @else {\n  <section>\n    <p>No favorites has been selected</p>\n  </section>\n  }\n</main>\n","import { NgClass, NgIf, TitleCasePipe } from '@angular/common';\nimport { Component, EventEmitter, Output, input } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport {\n  MatCard,\n  MatCardContent,\n  MatCardHeader,\n  MatCardSubtitle,\n  MatCardTitle,\n} from '@angular/material/card';\nimport { TemperaturePipe } from '../../shared/pipes/temperature.pipe';\nimport { IsUnitPipe } from '../../shared/pipes/unit-temperature.pipe';\nimport { Temperature } from '../models/current-weather-result';\n\nexport interface FavoriteEntity {\n  id: number;\n  WeatherText: string;\n  LocalizedName: string;\n  Temperature: Temperature;\n}\n\n@Component({\n  selector: 'weather-space-favorite-card',\n  templateUrl: './favorite-card.component.html',\n  styleUrls: ['./favorite-card.component.scss'],\n  standalone: true,\n  imports: [\n    NgIf,\n    NgClass,\n    MatCard,\n    MatCardHeader,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardContent,\n    MatButton,\n    TitleCasePipe,\n    IsUnitPipe,\n    TemperaturePipe,\n  ],\n})\nexport class FavoriteEntityComponent {\n  item = input.required<FavoriteEntity>();\n  metric = input.required<boolean>();\n\n  @Output() selectionChanged: EventEmitter<FavoriteEntity> =\n    new EventEmitter<FavoriteEntity>();\n\n  onSelectionChanged() {\n    this.selectionChanged.emit(this.item());\n  }\n}\n","<ng-container *ngIf=\"item() as item\">\n  <mat-card (click)=\"onSelectionChanged()\" class=\"favorite\">\n    <mat-card-header>\n      <mat-card-title\n        ><b>{{ item.LocalizedName | titlecase }}</b></mat-card-title\n      >\n      <span>{{ item.WeatherText | titlecase }}</span>\n    </mat-card-header>\n    <mat-card-content>\n      <span mat-card-subtitle>\n        {{ item.Temperature! | temperature : metric() }}\n        {{ metric() | isUnit : 'temp' }}</span\n      >\n    </mat-card-content>\n  </mat-card>\n</ng-container>\n"],"names":["Signal","inject","Router","KeyValuePipe","NgFor","Store","FavoriteEntityComponent","i0","ɵɵelementContainerStart","ɵɵtext","ɵɵelementStart","ɵɵlistener","FavoritesPageComponent_Conditional_2_ng_container_1_Template_weather_space_favorite_card_selectionChanged_4_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onSelectionChanged","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","item_r3","value","isMetric","ɵɵtemplate","FavoritesPageComponent_Conditional_2_ng_container_1_Template","ɵɵpipeBind1","items","FavoritesPageComponent","store","constructor","router","favoritesEntityMap","hasFavorites","id","updateCurrentId","navigateByUrl","_","ɵɵdirectiveInject","i1","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FavoritesPageComponent_Template","rf","ctx","FavoritesPageComponent_Conditional_2_Template","FavoritesPageComponent_Conditional_3_Template","ɵɵconditional","styles","NgIf","TitleCasePipe","EventEmitter","input","MatCard","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","TemperaturePipe","IsUnitPipe","FavoriteEntityComponent_ng_container_0_Template_mat_card_click_2_listener","ɵɵtextInterpolate","LocalizedName","WeatherText","ɵɵtextInterpolate2","ɵɵpipeBind2","Temperature","metric","item","required","selectionChanged","emit","inputs","ɵɵInputFlags","SignalBased","outputs","FavoriteEntityComponent_Template","FavoriteEntityComponent_ng_container_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}