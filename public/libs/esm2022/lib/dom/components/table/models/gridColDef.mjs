export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"gridColDef.js","sourceRoot":"","sources":["../../../../../../../../libs/src/lib/dom/components/table/models/gridColDef.ts"],"names":[],"mappings":"","sourcesContent":["import { GridColType } from './gridColType';\nimport { GridRowId, GridValidRowModel } from './gridRows';\nimport { GridComparatorFn, GridSortDirection } from './gridSortModel';\n/**\n * Alignment used in position elements in Cells.\n */\nexport type GridAlignment = 'left' | 'right' | 'center';\n\nexport type ValueOptions =\n  | string\n  | number\n  | {\n      value: unknown;\n      label: string;\n    }\n  | Record<string, unknown>;\n\nexport type GridKeyValue = string | number | boolean;\n\nexport type GridValueGetter<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V,\n  TValue = never\n> = (value: TValue, row: R, column: GridColDef<R, V, F>) => V;\n\nexport type GridValueFormatter<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V,\n  TValue = never\n> = (value: TValue, row: R, column: GridColDef<R, V, F>) => F;\n\nexport type GridValueSetter<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V\n> = (value: V, row: R, column: GridColDef<R, V, F>) => R;\n\nexport type GridValueParser<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V\n> = (\n  value: F | undefined,\n  row: R | undefined,\n  column: GridColDef<R, V, F>\n) => V;\n\nexport type GridColSpanFn<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V\n> = (value: V, row: R, column: GridColDef<R, V, F>) => number | undefined;\n/**\n * Column Definition base interface.\n */\nexport interface GridBaseColDef<\n  R extends GridValidRowModel = GridValidRowModel,\n  V = unknown,\n  F = V\n> {\n  /**\n   * The column identifier. It's used to map with [[GridRowModel]] values.\n   */\n  field: string;\n  /**\n   * The title of the column rendered in the column header cell.\n   */\n  headerName?: string;\n  /**\n   * The description of the column rendered as tooltip if the column header name is not fully displayed.\n   */\n  description?: string;\n  /**\n   * Set the width of the column.\n   * @default 100\n   */\n  width?: number;\n  /**\n   * If set, it indicates that a column has fluid width. Range [0, ∞).\n   */\n  flex?: number;\n  /**\n   * Sets the minimum width of a column.\n   * @default 50\n   */\n  minWidth?: number;\n  /**\n   * Sets the maximum width of a column.\n   * @default Infinity\n   */\n  maxWidth?: number;\n  /**\n   * If `false`, removes the buttons for hiding this column.\n   * @default true\n   */\n  hideable?: boolean;\n  /**\n   * If `true`, the column is sortable.\n   * @default true\n   */\n  sortable?: boolean;\n  /**\n   * The order of the sorting sequence.\n   */\n  sortingOrder?: GridSortDirection[];\n  /**\n   * If `true`, the column is resizable.\n   * @default true\n   */\n  resizable?: boolean;\n  /**\n   * If `true`, the cells of the column are editable.\n   * @default false\n   */\n  editable?: boolean;\n  /**\n   * If `true`, the rows can be grouped based on this column values (pro-plan only).\n   * Only available in DataGridPremium.\n   * TODO: Use module augmentation to move it to `@mui/x-data-grid-premium` (need to modify how we handle column types default values).\n   * @default true\n   */\n  groupable?: boolean;\n  /**\n   * If `false`, the menu items for column pinning menu will not be rendered.\n   * Only available in DataGridPro.\n   * TODO: Use module augmentation to move it to `@mui/x-data-grid-pro` (need to modify how we handle column types default values).\n   * @default true\n   */\n  pinnable?: boolean;\n  /**\n   * A comparator function used to sort rows.\n   */\n  sortComparator?: GridComparatorFn<V>;\n  /**\n   * Allows to use a different comparator function depending on the sort direction.\n   * Takes precedence over `sortComparator`.\n   * @param {GridSortDirection} sortDirection The direction of the sort.\n   * @returns {GridComparatorFn<V>} The comparator function to use.\n   */\n  getSortComparator?: (\n    sortDirection: GridSortDirection\n  ) => GridComparatorFn<V> | undefined;\n  /**\n   * The type of the column.\n   * @default 'string'\n   * @see See {@link https://mui.com/x/react-data-grid/column-definition/#column-types column types docs} for more details.\n   */\n  type?: GridColType;\n  /**\n   * Allows to align the column values in cells.\n   */\n  align?: GridAlignment;\n  /**\n   * Function that allows to get a specific data instead of field to render in the cell.\n   */\n  valueGetter?: GridValueGetter<R, V, F>;\n  /**\n   * Function that allows to customize how the entered value is stored in the row.\n   * It only works with cell/row editing.\n   * @returns {R} The row with the updated field.\n   */\n  valueSetter?: GridValueSetter<R, V, F>;\n  /**\n   * Function that allows to apply a formatter before rendering its value.\n   */\n  valueFormatter?: GridValueFormatter<R, V, F>;\n  /**\n   * Function that takes the user-entered value and converts it to a value used internally.\n   * @returns {V} The converted value to use internally.\n   */\n  valueParser?: GridValueParser<R, V, F>;\n  /**\n   * Class name that will be added in cells for that column.\n   */\n  cellClassName?: string;\n  /**\n   * Display mode for the cell:\n   *  - 'text': For text-based cells (default)\n   *  - 'flex': For cells with HTMLElement children\n   */\n  display?: 'text' | 'flex';\n\n  /**\n   * Class name that will be added in the column header cell.\n   */\n  headerClassName?: string;\n  /**\n   * Header cell element alignment.\n   */\n  headerAlign?: GridAlignment;\n  /**\n   * Toggle the visibility of the sort icons.\n   * @default false\n   */\n  hideSortIcons?: boolean;\n  /**\n   * If `true`, the column menu is disabled for this column.\n   * @default false\n   */\n  disableColumnMenu?: boolean;\n  /**\n   * If `true`, the column is filterable.\n   * @default true\n   */\n  filterable?: boolean;\n\n  /**\n   * If `true`, this column will not be included in exports.\n   * @default false\n   */\n  disableExport?: boolean;\n  /**\n   * Number of columns a cell should span.\n   * @default 1\n   */\n  colSpan?: number | GridColSpanFn<R, V, F>;\n}\n/**\n * Column Definition interface used for columns with the `actions` type.\n * @demos\n *   - [Special column properties](/x/react-data-grid/column-definition/#special-properties)\n */\nexport interface GridActionsColDef<\n  R extends GridValidRowModel = { [key: string]: unknown },\n  V = unknown,\n  F = V\n> extends GridBaseColDef<R, V, F> {\n  /**\n   * The type of the column.\n   * @default 'actions'\n   */\n  type: 'actions';\n\n  // getActions: (\n  //   params: GridRowParams<R>\n  // ) => React.ReactElement<GridActionsCellItemProps>[];\n}\n/**\n * Column Definition interface used for columns with the `singleSelect` type.\n * @demos\n *   - [Special column properties](/x/react-data-grid/column-definition/#special-properties)\n */\nexport interface GridSingleSelectColDef<\n  R extends GridValidRowModel = { [key: string]: unknown },\n  V = unknown,\n  F = V\n> extends GridBaseColDef<R, V, F> {\n  /**\n   * The type of the column.\n   * @default 'singleSelect'\n   */\n  type: 'singleSelect';\n  /**\n   * To be used in combination with `type: 'singleSelect'`. This is an array\n   * (or a function returning an array) of the possible cell values and labels.\n   */\n  valueOptions?:\n    | Array<ValueOptions>\n    | ((params: GridValueOptionsParams<R>) => Array<ValueOptions>);\n  /**\n   * Used to determine the label displayed for a given value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The text to be displayed.\n   */\n  getOptionLabel?: (value: ValueOptions) => string;\n  /**\n   * Used to determine the value used for a value option.\n   * @param {ValueOptions} value The current value option.\n   * @returns {string} The value to be used.\n   */\n  getOptionValue?: (value: ValueOptions) => unknown;\n}\n/**\n * Column Definition interface.\n * @demos\n *   - [Column definition](/x/react-data-grid/column-definition/)\n */\nexport type GridColDef<\n  R extends GridValidRowModel = { [key: string]: unknown },\n  V = unknown,\n  F = V\n> =\n  | GridBaseColDef<R, V, F>\n  | GridActionsColDef<R, V, F>\n  | GridSingleSelectColDef<R, V, F>;\nexport type GridColTypeDef<V = unknown, F = V> = Omit<\n  GridBaseColDef<{ [key: string]: unknown }, V, F>,\n  'field'\n>;\n\nexport interface GridValueOptionsParams<\n  R extends GridValidRowModel = { [key: string]: unknown }\n> {\n  /**\n   * The field of the column to which options will be provided\n   */\n  field: string;\n  /**\n   * The grid row id.\n   */\n  id?: GridRowId;\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row?: R;\n}\n"]}