export var GridRowModes;
(function (GridRowModes) {
    GridRowModes["Edit"] = "edit";
    GridRowModes["View"] = "view";
})(GridRowModes || (GridRowModes = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZFJvd3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL3NyYy9saWIvZG9tL2NvbXBvbmVudHMvdGFibGUvbW9kZWxzL2dyaWRSb3dzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZNQSxNQUFNLENBQU4sSUFBWSxZQUdYO0FBSEQsV0FBWSxZQUFZO0lBQ3RCLDZCQUFhLENBQUE7SUFDYiw2QkFBYSxDQUFBO0FBQ2YsQ0FBQyxFQUhXLFlBQVksS0FBWixZQUFZLFFBR3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JpZEtleVZhbHVlIH0gZnJvbSAnLi9ncmlkQ29sRGVmJztcblxuZXhwb3J0IHR5cGUgR3JpZFZhbGlkUm93TW9kZWwgPSB7IFtrZXk6IHN0cmluZyB8IHN5bWJvbF06IHVua25vd24gfTtcblxuZXhwb3J0IHR5cGUgR3JpZFJvd3NQcm9wPFIgZXh0ZW5kcyBHcmlkVmFsaWRSb3dNb2RlbCA9IEdyaWRWYWxpZFJvd01vZGVsPiA9XG4gIFJlYWRvbmx5PEdyaWRSb3dNb2RlbDxSPltdPjtcblxuLyoqXG4gKiBUaGUga2V5IHZhbHVlIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIGRhdGEgb2YgYSByb3cuXG4gKi9cbmV4cG9ydCB0eXBlIEdyaWRSb3dNb2RlbDxSIGV4dGVuZHMgR3JpZFZhbGlkUm93TW9kZWwgPSBHcmlkVmFsaWRSb3dNb2RlbD4gPSBSO1xuXG5leHBvcnQgdHlwZSBHcmlkVXBkYXRlQWN0aW9uID0gJ2RlbGV0ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZFJvd01vZGVsVXBkYXRlIGV4dGVuZHMgR3JpZFJvd01vZGVsIHtcbiAgX2FjdGlvbj86IEdyaWRVcGRhdGVBY3Rpb247XG59XG5cbi8qKlxuICogVGhlIGdyaWQgcm93cyB0b3RhbCBoZWlnaHQgYW5kIHJvdyBwb3NpdGlvbnMuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZFJvd3NNZXRhIHtcbiAgLyoqXG4gICAqIFRoZSBzdW0gb2YgYWxsIGdyaWQgcm93cy5cbiAgICovXG4gIHRvdGFsSGVpZ2h0OiBudW1iZXI7XG4gIC8qKlxuICAgKiBUaGUgZ3JpZCByb3dzIHBvc2l0aW9ucy5cbiAgICovXG4gIHBvc2l0aW9uczogbnVtYmVyW107XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZFRyZWVCYXNpY05vZGUge1xuICAvKipcbiAgICogVGhlIHVuaXEgaWQgb2YgdGhpcyBub2RlLlxuICAgKi9cbiAgaWQ6IEdyaWRSb3dJZDtcbiAgLyoqXG4gICAqIERlcHRoIG9mIHRoaXMgbm9kZSBpbiB0aGUgdHJlZS5cbiAgICovXG4gIGRlcHRoOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZExlYWZOb2RlIGV4dGVuZHMgR3JpZFRyZWVCYXNpY05vZGUge1xuICB0eXBlOiAnbGVhZic7XG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGdyb3VwIGNvbnRhaW5pbmcgdGhpcyBub2RlLlxuICAgKi9cbiAgcGFyZW50OiBHcmlkUm93SWQ7XG4gIC8qKlxuICAgKiBUaGUga2V5IHVzZWQgdG8gZ3JvdXAgdGhlIGNoaWxkcmVuIG9mIHRoaXMgcm93LlxuICAgKi9cbiAgZ3JvdXBpbmdLZXk6IEdyaWRLZXlWYWx1ZSB8IG51bGw7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZEJhc2ljR3JvdXBOb2RlIGV4dGVuZHMgR3JpZFRyZWVCYXNpY05vZGUge1xuICB0eXBlOiAnZ3JvdXAnO1xuICAvKipcbiAgICogVGhlIGtleSB1c2VkIHRvIGdyb3VwIHRoZSBjaGlsZHJlbiBvZiB0aGlzIHJvdy5cbiAgICovXG4gIGdyb3VwaW5nS2V5OiBHcmlkS2V5VmFsdWUgfCBudWxsO1xuICAvKipcbiAgICogVGhlIGZpZWxkIHVzZWQgdG8gZ3JvdXAgdGhlIGNoaWxkcmVuIG9mIHRoaXMgcm93LlxuICAgKiBJcyBgbnVsbGAgaWYgbm8gZmllbGQgaGFzIGJlZW4gdXNlZCB0byBncm91cCB0aGUgY2hpbGRyZW4gb2YgdGhpcyByb3cuXG4gICAqL1xuICBncm91cGluZ0ZpZWxkOiBzdHJpbmcgfCBudWxsO1xuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBib2R5IGNoaWxkcmVuIG5vZGVzLlxuICAgKiBPbmx5IGNvbnRhaW5zIHRoZSBjaGlsZHJlbiBvZiB0eXBlIFwiZ3JvdXBcIiBhbmQgXCJsZWFmXCIuXG4gICAqL1xuICBjaGlsZHJlbjogR3JpZFJvd0lkW107XG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGZvb3RlciBjaGlsZCBub2RlLlxuICAgKi9cbiAgZm9vdGVySWQ/OiBHcmlkUm93SWQgfCBudWxsO1xuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBjaGlsZHJlbiBub2RlcywgZ3JvdXBlZCBieSBncm91cGluZyBmaWVsZCBhbmQgZ3JvdXBpbmcga2V5LlxuICAgKiBPbmx5IGNvbnRhaW5zIHRoZSBjaGlsZHJlbiBvZiB0eXBlIFwiZ3JvdXBcIiBhbmQgXCJsZWFmXCIuXG4gICAqIEVtcHR5IGZvciBmbGF0IHRyZWUuXG4gICAqL1xuICBjaGlsZHJlbkZyb21QYXRoOiBHcmlkQ2hpbGRyZW5Gcm9tUGF0aExvb2t1cDtcbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhlIGNoaWxkcmVuIG9mIHRoaXMgZ3JvdXAgYXJlIG5vdCB2aXNpYmxlLlxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKi9cbiAgY2hpbGRyZW5FeHBhbmRlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBUaGUgaWQgb2YgdGhlIGdyb3VwIGNvbnRhaW5pbmcgdGhpcyBub2RlIChudWxsIGZvciB0aGUgcm9vdCBncm91cCkuXG4gICAqL1xuICBwYXJlbnQ6IEdyaWRSb3dJZCB8IG51bGw7XG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoaXMgcm93IGlzIHBpbm5lZC5cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICovXG4gIGlzUGlubmVkPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmlkQXV0b0dlbmVyYXRlZEdyb3VwTm9kZSBleHRlbmRzIEdyaWRCYXNpY0dyb3VwTm9kZSB7XG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoaXMgbm9kZSBoYXMgYmVlbiBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSB0aGUgZ3JpZC5cbiAgICogSW4gdGhlIHJvdyBncm91cGluZywgYWxsIGdyb3VwcyBhcmUgYXV0by1nZW5lcmF0ZWRcbiAgICogSW4gdGhlIHRyZWUgZGF0YSwgc29tZSBncm91cHMgY2FuIGJlIHBhc3NlZCBpbiB0aGUgcm93c1xuICAgKi9cbiAgaXNBdXRvR2VuZXJhdGVkOiB0cnVlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdyaWREYXRhR3JvdXBOb2RlIGV4dGVuZHMgR3JpZEJhc2ljR3JvdXBOb2RlIHtcbiAgLyoqXG4gICAqIElmIGB0cnVlYCwgdGhpcyBub2RlIGhhcyBiZWVuIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IHRoZSBncmlkLlxuICAgKiBJbiB0aGUgcm93IGdyb3VwaW5nLCBhbGwgZ3JvdXBzIGFyZSBhdXRvLWdlbmVyYXRlZFxuICAgKiBJbiB0aGUgdHJlZSBkYXRhLCBzb21lIGdyb3VwcyBjYW4gYmUgcGFzc2VkIGluIHRoZSByb3dzXG4gICAqL1xuICBpc0F1dG9HZW5lcmF0ZWQ6IGZhbHNlO1xufVxuXG5leHBvcnQgdHlwZSBHcmlkR3JvdXBOb2RlID0gR3JpZERhdGFHcm91cE5vZGUgfCBHcmlkQXV0b0dlbmVyYXRlZEdyb3VwTm9kZTtcblxuZXhwb3J0IHR5cGUgR3JpZENoaWxkcmVuRnJvbVBhdGhMb29rdXAgPSB7XG4gIFtncm91cGluZ0ZpZWxkOiBzdHJpbmddOiB7XG4gICAgW2dyb3VwaW5nS2V5OiBzdHJpbmddOiBHcmlkUm93SWQ7XG4gIH07XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyaWRGb290ZXJOb2RlIGV4dGVuZHMgR3JpZFRyZWVCYXNpY05vZGUge1xuICB0eXBlOiAnZm9vdGVyJztcbiAgLyoqXG4gICAqIFRoZSBpZCBvZiB0aGUgZ3JvdXAgY29udGFpbmluZyB0aGlzIG5vZGUuXG4gICAqL1xuICBwYXJlbnQ6IEdyaWRSb3dJZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmlkU2tlbGV0b25Sb3dOb2RlIGV4dGVuZHMgR3JpZFRyZWVCYXNpY05vZGUge1xuICB0eXBlOiAnc2tlbGV0b25Sb3cnO1xuICAvKipcbiAgICogVGhlIGlkIG9mIHRoZSBncm91cCBjb250YWluaW5nIHRoaXMgbm9kZS5cbiAgICogSXMgYWx3YXlzIGVxdWFsIHRvIGBHUklEX1JPT1RfR1JPVVBfSURgLlxuICAgKi9cbiAgcGFyZW50OiBHcmlkUm93SWQ7XG59XG5cbmludGVyZmFjZSBHcmlkQmFzaWNQaW5uZWRSb3dOb2RlIGV4dGVuZHMgR3JpZFRyZWVCYXNpY05vZGUge1xuICB0eXBlOiAncGlubmVkUm93JztcbiAgLyoqXG4gICAqIFRoZSBpZCBvZiB0aGUgZ3JvdXAgY29udGFpbmluZyB0aGlzIG5vZGUuXG4gICAqIElzIGFsd2F5cyBlcXVhbCB0byBgR1JJRF9ST09UX0dST1VQX0lEYC5cbiAgICovXG4gIHBhcmVudDogR3JpZFJvd0lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdyaWREYXRhUGlubmVkUm93Tm9kZSBleHRlbmRzIEdyaWRCYXNpY1Bpbm5lZFJvd05vZGUge1xuICAvKipcbiAgICogSWYgYHRydWVgLCB0aGlzIG5vZGUgaGFzIGJlZW4gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgdGhlIGdyaWQuXG4gICAqL1xuICBpc0F1dG9HZW5lcmF0ZWQ6IHRydWU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgR3JpZEF1dG9HZW5lcmF0ZWRQaW5uZWRSb3dOb2RlIGV4dGVuZHMgR3JpZEJhc2ljUGlubmVkUm93Tm9kZSB7XG4gIC8qKlxuICAgKiBJZiBgdHJ1ZWAsIHRoaXMgbm9kZSBoYXMgYmVlbiBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSB0aGUgZ3JpZC5cbiAgICovXG4gIGlzQXV0b0dlbmVyYXRlZDogZmFsc2U7XG59XG5cbmV4cG9ydCB0eXBlIEdyaWRQaW5uZWRSb3dOb2RlID1cbiAgfCBHcmlkRGF0YVBpbm5lZFJvd05vZGVcbiAgfCBHcmlkQXV0b0dlbmVyYXRlZFBpbm5lZFJvd05vZGU7XG5cbmV4cG9ydCB0eXBlIEdyaWRUcmVlTm9kZSA9XG4gIHwgR3JpZExlYWZOb2RlXG4gIHwgR3JpZEdyb3VwTm9kZVxuICB8IEdyaWRGb290ZXJOb2RlXG4gIHwgR3JpZFBpbm5lZFJvd05vZGVcbiAgfCBHcmlkU2tlbGV0b25Sb3dOb2RlO1xuXG5leHBvcnQgdHlwZSBHcmlkVHJlZU5vZGVXaXRoUmVuZGVyID1cbiAgfCBHcmlkTGVhZk5vZGVcbiAgfCBHcmlkR3JvdXBOb2RlXG4gIHwgR3JpZEZvb3Rlck5vZGVcbiAgfCBHcmlkUGlubmVkUm93Tm9kZTtcblxuZXhwb3J0IHR5cGUgR3JpZFJvd1RyZWVDb25maWcgPSBSZWNvcmQ8R3JpZFJvd0lkLCBHcmlkVHJlZU5vZGU+O1xuXG4vKipcbiAqIFRoZSB0eXBlIG9mIElkIHN1cHBvcnRlZCBieSB0aGUgZ3JpZC5cbiAqL1xuZXhwb3J0IHR5cGUgR3JpZFJvd0lkID0gc3RyaW5nIHwgbnVtYmVyO1xuXG5leHBvcnQgaW50ZXJmYWNlIEdyaWRSb3dFbnRyeTxSIGV4dGVuZHMgR3JpZFZhbGlkUm93TW9kZWwgPSBHcmlkVmFsaWRSb3dNb2RlbD4ge1xuICAvKipcbiAgICogVGhlIHJvdyBpZC5cbiAgICovXG4gIGlkOiBHcmlkUm93SWQ7XG4gIC8qKlxuICAgKiBUaGUgcm93IG1vZGVsLlxuICAgKi9cbiAgbW9kZWw6IFI7XG59XG5cbi8qKlxuICogVGhlIGZ1bmN0aW9uIHRvIHJldHJpZXZlIHRoZSBpZCBvZiBhIFtbR3JpZFJvd01vZGVsXV0uXG4gKi9cbmV4cG9ydCB0eXBlIEdyaWRSb3dJZEdldHRlcjxSIGV4dGVuZHMgR3JpZFZhbGlkUm93TW9kZWwgPSBHcmlkVmFsaWRSb3dNb2RlbD4gPSAoXG4gIHJvdzogUlxuKSA9PiBHcmlkUm93SWQ7XG5cbmV4cG9ydCBlbnVtIEdyaWRSb3dNb2RlcyB7XG4gIEVkaXQgPSAnZWRpdCcsXG4gIFZpZXcgPSAndmlldycsXG59XG4iXX0=